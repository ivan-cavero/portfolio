---
import { t, type TranslationKey } from '../i18n/translations';

interface Props {
  locale: 'en' | 'es';
}

const { locale } = Astro.props;

const missions = [
  {
    role: 'tech.lead',
    company: 'Solaris Developments',
    companyUrl: 'https://solarisdevelopments.com',
    period: 'Apr 2023 - Present',
    location: 'location',
    achievements: [
      'mission.achievement1',
      'mission.achievement2',
      'mission.achievement3',
      'mission.achievement4'
    ],
    technologies: ['Vue.js', 'Node.js', 'Azure', 'Docker'],
    links: [
      {
        label: 'company.profile',
        url: 'https://linkedin.com/company/solaris-developments'
      }
    ]
  },
  {
    role: 'full.stack.developer',
    company: 'Martico',
    companyUrl: 'https://martico.com',
    period: 'May 2022 - Apr 2023',
    location: 'location',
    achievements: [
      'mission.achievement5',
      'mission.achievement6',
      'mission.achievement7'
    ],
    technologies: ['Vue.js', 'Express', 'MySQL', 'Docker'],
    links: [
      {
        label: 'company.profile',
        url: 'https://linkedin.com/company/martico'
      }
    ]
  }
];
---

<div class="panel col-span-full fade-in">
  <div class="panel-header">
    <div class="flex items-center justify-between w-full">
      <div class="flex items-center gap-2">
        <!-- History icon -->
        <span class="text-[var(--accent)]">
          <svg  width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-history"><path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/><path d="M3 3v5h5"/><path d="M12 7v5l4 2"/></svg>
        </span>
        <span class="header-text">{t('mission.history', locale)}</span>
      </div>
      <div class="flex items-center gap-4 text-xs text-[var(--accent)]">
        <div class="flex items-center gap-1">
          <!-- GitBranch icon -->
          <span>
            <svg  width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-git-branch"><line x1="6" x2="6" y1="3" y2="15"/><circle cx="18" cy="6" r="3"/><circle cx="6" cy="18" r="3"/><path d="M18 9a9 9 0 0 1-9 9"/></svg>
          </span>
          <span>2+ {t('experience', locale)}</span>
        </div>
        <div class="flex items-center gap-1">
          <!-- Star icon -->
          <span>
            <svg  width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-star"><path d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"/></svg>
          </span>
          <span>{t('multiple.missions', locale)}</span>
        </div>
      </div>
    </div>
  </div>

  <div class="p-6">
    <div class="space-y-6">
      {missions.map((mission, index) => (
        <div 
          class={`data-display ${
            index === 0 ? 'border-[var(--accent)] bg-[var(--accent)]/5' : ''
          } slide-in`}
          style={`animation-delay: ${index * 0.1}s`}
        >
          <div class="flex flex-wrap justify-between items-start mb-4">
            <div>
              <h3 class="text-lg font-bold">{t(mission.role as TranslationKey, locale)}</h3>
              <a 
                href={mission.companyUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="text-[var(--accent)] hover:underline flex items-center gap-1"
              >
                {mission.company}
                {/* <!-- Link icon --> */}
                <span>
                  <svg  width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/></svg>
                </span>
              </a>
              <p class="text-sm text-gray-400 mt-1">{t(mission.location as TranslationKey, locale)}</p>
            </div>
            <div class="text-xs font-mono bg-black/30 px-2 py-1 rounded border border-[var(--border)]">
              {mission.period.replace('Present', t('present', locale))}
            </div>
          </div>

          <div class="space-y-4">
            <div>
              <h4 class="text-xs text-[var(--accent)] mb-2">{t('achievements', locale)}</h4>
              <div class="space-y-2">
                {mission.achievements.map((achievement) => (
                  <div class="flex items-start gap-2 text-sm">
                    <div class="w-1 h-1 rounded-full bg-[var(--accent)] mt-2"></div>
                    <span>{t(achievement as TranslationKey, locale)}</span>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <h4 class="text-xs text-[var(--accent)] mb-2">{t('technologies', locale)}</h4>
              <div class="flex flex-wrap gap-2">
                {mission.technologies.map((tech) => (
                  <span 
                    class="text-xs px-2 py-1 bg-black/30 rounded border border-[var(--border)]"
                  >
                    {tech}
                  </span>
                ))}
              </div>
            </div>

            {mission.links.length > 0 && (
              <div>
                <h4 class="text-xs text-[var(--accent)] mb-2">{t('related.links', locale)}</h4>
                <div class="flex flex-wrap gap-2">
                  {mission.links.map((link) => (
                    <a
                      href={link.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-xs flex items-center gap-1 px-2 py-1 bg-black/30 rounded border border-[var(--border)] hover:border-[var(--accent)] transition-colors"
                    >
                      {t(link.label as TranslationKey, locale)}
                      {/* <!-- Link icon --> */}
                      <span>
                        <svg  width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/></svg>
                      </span>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</div>